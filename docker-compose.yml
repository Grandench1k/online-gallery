version: '3.8'

services:
  app:
    container_name: app
    build:
      dockerfile: Dockerfile
    depends_on:
      mongo:
        condition: service_healthy
      cache:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      REDIS_HOST: cache
      REDIS_PORT: 6379
      MONGODB_HOST: mongo
      MONGODB_PORT: 27017
      AWS_ACCESS_KEY_ID:
      AWS_SECRET_ACCESS_KEY:
      AWS_REGION:
    networks:
      - app-network

  mongo:
    image: mongo:7
    container_name: mongo
    restart: always
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network
    healthcheck:
      test: ["CMD","mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5

  cache:
    container_name: cache
    image: redis:7.0-alpine
    restart: always
    command: redis-server
    volumes:
      - redis-data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
  redis-data: